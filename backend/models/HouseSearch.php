<?php


namespace backend\models;


use common\models\House;
use yii\base\Model;
use yii\data\ActiveDataProvider;

class HouseSearch extends House
{
    public function rules()
    {
        return [
            [['id','sell','prepayment','rent','lease_type'],'integer'],
            [['title','status','city.id','neighborhood_id','author.username'],'safe']
        ];
    }

    public function scenarios()
    {
        return Model::scenarios(); // TODO: Change the autogenerated stub
    }

    public function attributes()
    {
        return array_merge(parent::attributes(),
            ['author.username','city.id']);
    }

    public function search($params){
        $query = House::find();

        $dataProvider = new ActiveDataProvider([
                'query'=>$query,
               'pagination'=>[
                 'pageSize'=>10
                ]
        ]);

        $query->joinWith(['city'=>function($query){
        }]);


        $query->joinWith(['author'=>function($query){
            $query->from(['author'=>'user']);
        }]);

        $query->addOrderBy(['updated_at'=>SORT_DESC]);

     $dataProvider->sort->attributes['city.id']=[
         'asc' => ['city.id' => SORT_ASC],
         'desc' => ['city.id' => SORT_DESC],
     ];

        $dataProvider->sort->attributes['author.username']=[
            'asc' => ['author.username' => SORT_ASC],
            'desc' => ['author.username' => SORT_DESC],
        ];


        if (!($this->load($params) && $this->validate())) {
            return $dataProvider;
        }

        // adjust the query by adding the filters
        $query->andFilterWhere(['house.id' => $this->id]);
        $query->andFilterWhere(['like', 'title', $this->title]);
        $query->andFilterWhere(['lease_type'=>$this->lease_type]);
        $query->andFilterWhere(['like', 'sell', $this->sell]);
        $query->andFilterWhere(['like', 'prepayment', $this->prepayment]);
        $query->andFilterWhere(['like', 'rent', $this->rent]);
        $query->andFilterWhere(['city.id'=> $this->getAttribute('city.id')]);
        $query->andFilterWhere(['like','author.username', $this->getAttribute('author.username')]);
        $query->andFilterWhere(['neighborhood_id'=> $this->neighborhood_id]);
        $query->andFilterWhere(['house.status'=> $this->status]);
        return $dataProvider;
    }


}